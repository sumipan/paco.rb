#!/usr/bin/env ruby

require 'rake'
require 'tmpdir'

desc 'test'
task :test do |task,args|
  Rake::Task[:cleanup].execute

  FileUtils.mkdir_p(ENV['PACO_TEST_PATH']) \
    unless Dir.exist?(ENV['PACO_TEST_PATH'])

  sh sprintf("'%s/Unity.app/Contents/MacOS/Unity' -batchmode -quit -logFile -createProject '%s'",
    ENV['PACO_UNITY_PATH'].strip.sub('/$',''),
    ENV['PACO_TEST_PATH'].strip)

  sh sprintf("'%s/Unity.app/Contents/MacOS/Unity' -batchmode -quit -logFile -projectPath '%s' -importPackage '%s'",
    ENV['PACO_UNITY_PATH'].strip.sub('/$',''),
    ENV['PACO_TEST_PATH'].strip,
    ENV['PACO_TEST_UNITY_TEST_TOOLS_PATH'])

  begin
    sh sprintf("'%s/Unity.app/Contents/MacOS/Unity' -batchmode -logFile -projectPath '%s' -executeMethod UnityTest.Batch.RunIntegrationTests -resultsFileDirectory='%s'",
      ENV['PACO_UNITY_PATH'].strip.sub('/$',''),
      ENV['PACO_TEST_PATH'].strip,
      ENV['PACO_TEST_PATH'].strip)
  rescue
    # ignore RunIntegrationTests exit code
  end

  begin
    sh sprintf("'%s/Unity.app/Contents/MacOS/Unity' -batchmode -logFile -projectPath '%s' -executeMethod UnityTest.Batch.RunUnitTests -resultsFileDirectory='%s'",
      ENV['PACO_UNITY_PATH'].strip.sub('/$',''),
      ENV['PACO_TEST_PATH'].strip,
      ENV['PACO_TEST_PATH'].strip)
  rescue
    # ignore RunUnitTests exit code
  end
end

task :cleanup do |task,args|
  if Dir.exist?(ENV['PACO_TEST_PATH']) then
    Dir.entries(ENV['PACO_TEST_PATH']).each do |path|
      next if path.match(/^\.{1,2}$/)

      absolute_path = sprintf("%s/%s", ENV['PACO_TEST_PATH'], path)
      if File.directory?(absolute_path)
        FileUtils.remove_dir(absolute_path)
      else
        FileUtils.remove(absolute_path, {:force => true, :verbose => true})
      end
    end
  end
end

desc 'help'
task :help do |task,args|
  puts <<HELP
[usage] peco test [package ...]
HELP
end

# check task exist. show help unless found
task = ARGV[0]
begin
  Rake::Task[task]
rescue => e
  Rake::Task[:help].invoke
  exit 1
end

# check PACO_UNITY_PATH
raise 'error. Please set PACO_UNITY_PATH environment.' \
  if !ENV['PACO_UNITY_PATH'] || !File.exist?(ENV['PACO_UNITY_PATH'])

ENV['PACO_TEST_PATH'] = Dir.tmpdir if !ENV['PACO_TEST_PATH']

# execute task
Rake::Task[task].execute
